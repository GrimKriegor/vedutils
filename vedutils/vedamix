#!/bin/bash

set -e

source vedcommon

input_file="$1"
audio_file="$2"
timestamp_begining="$3"
timestamp_ending="$4"
audio_volume_percent="${5:-100}"
output_file_name="${6:-mixed_$input_file}"

if [[ -z ${input_file} || -z ${audio_file} || -z ${timestamp_begining} ]]
then
  echo -e "Usage: $0 VIDEO_FILE AUDIO_FILE BEGINING [ENDING] [AUDIO_VOLUME_PERCENT] [OUTPUT_FILE]"
  exit 0
fi

[[ -z "$timestamp_ending" ]] && \
  timestamp_ending="$(getVideoDuration "${input_file}")"

audio_volume_decimal="$(bc -l <<< "scale=2; ${audio_volume_percent} / 100" | awk '{printf "%.2f\n", $0}')"
timestamp_begining_seconds="$(timestampToSeconds ${timestamp_begining})"
timestamp_ending_seconds="$(timestampToSeconds ${timestamp_ending})"
timestamp_begining_milis="$((${timestamp_begining_seconds} * 1000))"
audio_duration=$(echo "scale=1; ${timestamp_ending_seconds}-${timestamp_begining_seconds}" | bc | sed 's/^\./0./')

eval ffmpeg \
  ${VEDUTILS_FFMPEG_ARGS_COMMON} \
  ${VEDUTILS_FFMPEG_ARGS_EXTRA} \
  -i "${input_file}" \
  -stream_loop -1 \
  -i "${audio_file}" \
  -c:v copy \
  -filter_complex \
    "[1:0]volume=${audio_volume_decimal}[a1];\
    [a1]atrim=duration=${audio_duration}[a2];\
    [a2]adelay=delays=${timestamp_begining_milis}:all=1[a3];\
    [0:a][a3]amix=inputs=2:duration=first" \
  -map 0:v:0 \
  "${output_file_name}"

echo -e "Mixed in $audio_file | Starting at: ${timestamp_begining} | Duration: ${audio_duration}s | Volume: ${audio_volume_percent}%"
